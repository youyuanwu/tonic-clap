// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";

import "google/protobuf/empty.proto";

package helloworld;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}
  rpc SayHello2 (HelloRequest2) returns (HelloReply2) {}
}

service Greeter2 {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}
  rpc SayHello2 (HelloRequest2) returns (HelloReply2) {}
  rpc SayHello3 (google.protobuf.Empty) returns (HelloReply) {}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

message HelloRequest2 {
  string name = 1;
  Field1 field1 = 2;
  repeated string field2 = 3;
  EnumOk field3 = 4;
  optional string opt_string = 5;
  oneof one_of_field {
    OneOf1 one_of_1 = 6;
    OneOf2 one_of_2 = 7;
    // Internal one of field cannot be optional.
    int32 one_of_int = 8;
  }
}

message OneOf1{
  string one_of_str = 1;
}

message OneOf2{
  int32 one_of_int = 1;
}

enum EnumOk {
  Ok0 = 0;
  Ok1 = 1;
}

message Field1{
  string fname =1;
  int32 fcount = 2;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

message HelloReply2 {
  string message = 1;
}