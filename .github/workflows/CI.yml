name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-2025, ubuntu-latest ]
    steps:
    - uses: actions/checkout@v5

    # winget list openssl --accept-source-agreements
    # openssl might not be installed from winget.
    - name: list openssl
      if: runner.os == 'Windows'
      run: |    
        Get-ItemProperty "HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\*" | Where-Object { $_.DisplayName -like "*OpenSSL*" }
      shell: pwsh

    - name: Set openssl environment variables
      if: runner.os == 'Windows'
      run: |
        echo "OPENSSL_DIR=C:/Program Files/OpenSSL" >> $env:GITHUB_ENV
        echo "OPENSSL_LIB_DIR=C:/Program Files/OpenSSL/lib/VC/x64/MDd" >> $env:GITHUB_ENV
      shell: pwsh

    - name: Install rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 1.89.0
        components: rustfmt, clippy
    
    - uses: taiki-e/install-action@protoc

    - uses: taiki-e/install-action@cargo-llvm-cov

    - name: Run cargo check
      run: cargo check

    - name: Run cargo fmt
      run: cargo fmt --all -- --check
    
    - name: Run cargo clippy
      run: cargo clippy --all-targets -- -D warnings

    - name: Run cargo build
      run: cargo build --all-targets

    - name: Run cargo test
      run: cargo test --all -- --nocapture

    - name: Run llvm-cov
      run: cargo llvm-cov --codecov --output-path codecov.json --include-build-script --ignore-filename-regex "tonic-clap-tests.*|apps.*"

    - name: Show cov summary
      run: cargo llvm-cov report --summary-only --include-build-script --ignore-filename-regex "tonic-clap-tests.*|apps.*"

    # - name: Upload Report to Codecov
    #   uses: codecov/codecov-action@v5
    #   with:
    #     files: ./codecov.json
    #     fail_ci_if_error: true
    #     token: ${{ secrets.CODECOV_TOKEN }} # required